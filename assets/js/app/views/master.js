// Generated by CoffeeScript 1.10.0
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  App.MasterView = (function(superClass) {
    extend(MasterView, superClass);

    function MasterView() {
      this.close = bind(this.close, this);
      this.toggleVisible = bind(this.toggleVisible, this);
      return MasterView.__super__.constructor.apply(this, arguments);
    }

    MasterView.prototype.template = function(data) {
      var tpl;
      tpl = $.tmpload({
        id: this.tpl
      });
      return tpl(data);
    };

    MasterView.prototype.toggleVisible = function() {
      if (this.$el.is(":empty")) {
        return this.$el.parents(".container:first").hide();
      } else {
        return this.$el.parents(".container:first").show();
      }
    };

    MasterView.prototype.close = function() {
      this.undelegateEvents();
      this.remove();
      this.unbind();
    };

    return MasterView;

  })(Backbone.View);

}).call(this);
