// Generated by CoffeeScript 1.10.0
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  App.NotificationSettingsView = (function(superClass) {
    extend(NotificationSettingsView, superClass);

    function NotificationSettingsView() {
      return NotificationSettingsView.__super__.constructor.apply(this, arguments);
    }

    NotificationSettingsView.prototype.tpl = null;

    NotificationSettingsView.prototype.model = null;

    NotificationSettingsView.prototype.events = {
      "change input[type='checkbox']": "onSettingsChange"
    };

    NotificationSettingsView.prototype.initialize = function(options) {
      if (options == null) {
        options = {};
      }
    };

    NotificationSettingsView.prototype.onSettingsChange = function(ev) {
      var $input, data;
      $input = $(ev.target);
      data = {};
      data[$input.attr("name")] = $input.is(":checked");
      return this.model.save(data, {
        success: function() {
          return $.publish("error", "Settings successfully saved.");
        },
        error: function(m, xhr) {
          return $.publish("error", xhr);
        }
      });
    };

    return NotificationSettingsView;

  })(App.MasterView);

}).call(this);
