// Generated by CoffeeScript 1.10.0
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  App.SampleView = (function(superClass) {
    extend(SampleView, superClass);

    function SampleView() {
      return SampleView.__super__.constructor.apply(this, arguments);
    }

    SampleView.prototype.tpl = null;

    SampleView.prototype.model = null;

    SampleView.prototype.collection = null;

    SampleView.prototype.hideOnEmpty = false;

    SampleView.prototype.initialize = function(options) {
      if (options == null) {
        options = {};
      }
      if (options.model) {
        this.model = options.model;
      }
      if (options.tpl) {
        return this.tpl = options.tpl;
      }
    };

    SampleView.prototype.events = {
      'click #cancel-button': 'cancelSubmission',
      'click #confirm-button': 'confirmSubmission'
    };

    SampleView.prototype.render = function() {
      var content;
      content = this.template({
        payment: this.model
      });
      return this.$el.html(content);
    };

    SampleView.prototype.cancelSubmission = function() {
      var p;
      p = new App.WithdrawalView({
        model: this.model,
        el: '#form-container',
        tpl: "btc-form"
      });
      return p.render();
    };

    SampleView.prototype.confirmSubmission = function() {};

    return SampleView;

  })(App.MasterView);

}).call(this);
