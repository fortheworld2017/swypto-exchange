// Generated by CoffeeScript 1.9.3
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  window.App || (window.App = {});

  App.OrderModel = (function(superClass) {
    extend(OrderModel, superClass);

    function OrderModel() {
      return OrderModel.__super__.constructor.apply(this, arguments);
    }

    OrderModel.prototype.urlRoot = "/orders";

    OrderModel.prototype.calculateFirstAmount = function() {
      if (this.get("status") === "partiallyCompleted") {
        if (this.get("type") === "market") {
          if (this.get("action") === "buy") {
            return _.str.satoshiRound(App.math.select(this.get("amount")).divide(this.get("unit_price")).add(-this.get("result_amount")).done());
          }
          if (this.get("action") === "sell") {
            return _.str.satoshiRound(App.math.add(this.get("amount"), -this.get("matched_amount")));
          }
        }
        if (this.get("type") === "limit") {
          if (this.get("action") === "buy") {
            return _.str.satoshiRound(App.math.add(this.get("amount"), -this.get("result_amount")));
          }
          if (this.get("action") === "sell") {
            return _.str.satoshiRound(App.math.add(this.get("amount"), -this.get("matched_amount")));
          }
        }
      }
      if (this.get("status") === "completed") {
        if (this.get("action") === "buy") {
          return _.str.satoshiRound(this.get("result_amount"));
        }
        if (this.get("action") === "sell") {
          return _.str.satoshiRound(this.get("matched_amount"));
        }
      }
      if (this.get("type") === "market") {
        if (this.get("action") === "buy") {
          return _.str.satoshiRound(App.math.divide(this.get("amount"), this.get("unit_price")));
        }
        if (this.get("action") === "sell") {
          return _.str.satoshiRound(this.get("amount"));
        }
      }
      if (this.get("type") === "limit") {
        return _.str.satoshiRound(this.get("amount"));
      }
    };

    OrderModel.prototype.calculateSecondAmount = function() {
      if (this.get("status") === "partiallyCompleted") {
        if (this.get("type") === "market") {
          if (this.get("action") === "buy") {
            return _.str.satoshiRound(App.math.add(this.get("amount"), -this.get("matched_amount")));
          }
          if (this.get("action") === "sell") {
            return _.str.satoshiRound(App.math.multiply(App.math.add(this.get("amount"), -this.get("matched_amount")), this.get("unit_price")));
          }
        }
        if (this.get("type") === "limit") {
          if (this.get("action") === "buy") {
            return _.str.satoshiRound(App.math.multiply(App.math.add(this.get("amount"), -this.get("result_amount")), this.get("unit_price")));
          }
          if (this.get("action") === "sell") {
            return _.str.satoshiRound(App.math.multiply(App.math.add(this.get("amount"), -this.get("matched_amount")), this.get("unit_price")));
          }
        }
      }
      if (this.get("status") === "completed") {
        if (this.get("action") === "buy") {
          return _.str.satoshiRound(this.get("matched_amount"));
        }
        if (this.get("action") === "sell") {
          return _.str.satoshiRound(this.get("result_amount"));
        }
      }
      if (this.get("type") === "market") {
        if (this.get("action") === "buy") {
          return _.str.satoshiRound(this.get("amount"));
        }
        if (this.get("action") === "sell") {
          return _.str.satoshiRound(App.math.multiply(this.get("amount"), this.get("unit_price")));
        }
      }
      if (this.get("type") === "limit") {
        return _.str.satoshiRound(App.math.multiply(this.get("amount"), this.get("unit_price")));
      }
    };

    OrderModel.prototype.calculateFirstNoFeeAmount = function() {
      if (this.get("status") === "partiallyCompleted") {
        return _.str.satoshiRound(App.math.add(this.get("amount"), -this.get("matched_amount")));
      }
      return _.str.satoshiRound(this.get("amount"));
    };

    OrderModel.prototype.calculateSecondNoFeeAmount = function() {
      if (this.get("status") === "partiallyCompleted") {
        return _.str.satoshiRound(App.math.multiply(App.math.add(this.get("amount"), -this.get("matched_amount")), this.get("unit_price")));
      }
      if (this.get("status") === "completed") {
        if (this.get("action") === "buy") {
          return _.str.satoshiRound(this.get("amount"));
        }
      }
      return _.str.satoshiRound(App.math.multiply(this.get("amount"), this.get("unit_price")));
    };

    OrderModel.prototype.getCreatedDate = function() {
      return new Date(this.get('created_at')).format('dd.mm.yy H:MM');
    };

    OrderModel.prototype.mergeWithOrder = function(orderToMerge) {
      var attributes;
      attributes = orderToMerge.toJSON();
      if (_.isEmpty(this.attributes)) {
        return this.attributes = attributes;
      }
      return this.set({
        amount: App.math.add(this.attributes.amount, attributes.amount),
        matched_amount: App.math.add(this.attributes.matched_amount, attributes.matched_amount),
        result_amount: App.math.add(this.attributes.result_amount, attributes.result_amount)
      });
    };

    return OrderModel;

  })(Backbone.Model);

}).call(this);
