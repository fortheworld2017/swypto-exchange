// Generated by CoffeeScript 1.9.3
(function() {
  require("./../../helpers/spec_helper");

  describe("Transaction", function() {
    var trTime, transaction, transactionData, wallet;
    transaction = void 0;
    wallet = GLOBAL.db.Wallet.build({
      user_id: 1
    });
    trTime = Date.now() / 1000;
    transactionData = {
      amount: 1,
      txid: "unique_tx_id",
      confirmations: 6,
      time: trTime,
      account: "account",
      fee: 0.0001,
      address: "address",
      category: "send"
    };
    beforeEach(function(done) {
      transaction = GLOBAL.db.Transaction.build();
      return GLOBAL.db.sequelize.sync({
        force: true
      }).complete(function() {
        return done();
      });
    });
    return describe("addFromWallet", function() {
      describe("when the given transaction does not exist", function() {
        return it("creates one", function(done) {
          return GLOBAL.db.Transaction.addFromWallet(transactionData, "BTC", wallet, function(err, tr) {
            var expectedData;
            expectedData = {
              id: 1,
              currency: "BTC",
              account: "account",
              fee: 10000,
              amount: 100000000,
              address: "address",
              category: "send",
              txid: "unique_tx_id",
              confirmations: 6
            };
            tr.values.should.have.properties(expectedData);
            return done();
          });
        });
      });
      return describe("when the given transaction already exists", function() {
        return it("updates it", function(done) {
          return GLOBAL.db.Transaction.addFromWallet(transactionData, "BTC", wallet, function(err, trOld) {
            var newTransactionData;
            newTransactionData = transactionData;
            newTransactionData.confirmations = 10;
            return GLOBAL.db.Transaction.addFromWallet(newTransactionData, "BTC", wallet, function(err, tr) {
              var expectedData;
              expectedData = {
                id: 1,
                currency: "BTC",
                account: "account",
                fee: 10000,
                amount: 100000000,
                address: "address",
                category: "send",
                txid: "unique_tx_id",
                confirmations: 10
              };
              tr.values.should.have.properties(expectedData);
              trOld.id.should.eql(tr.id);
              return done();
            });
          });
        });
      });
    });
  });

}).call(this);
